// <auto-generated />
using System;
using Atlas_Monitoring.Core.Infrastructure.DataBases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Atlas_Monitoring.Core.Infrastructure.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20240927122712_IncreaseLengthToDomainName")]
    partial class IncreaseLengthToDomainName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.ComputerData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)");

                    b.Property<double>("MemoryUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.Property<double>("ProcessorUtilityPourcent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.Property<double>("UptimeSinceInSecond")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("ComputerData", (string)null);
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.ComputerHardDrive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Letter")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("");

                    b.Property<double>("SpaceUse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.Property<double>("TotalSpace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("ComputerHardDrive", (string)null);
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateAdd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2024, 9, 27, 14, 27, 12, 487, DateTimeKind.Local).AddTicks(9670));

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2024, 9, 27, 14, 27, 12, 488, DateTimeKind.Local).AddTicks(10));

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("int");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("MaxRam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("");

                    b.Property<double>("NumberOfLogicalProcessors")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.Property<string>("OS")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasDefaultValue("");

                    b.Property<string>("OSVersion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasDefaultValue("");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasDefaultValue("");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("Device", (string)null);
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.DeviceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceHistory", (string)null);
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.DeviceParts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Labels")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceParts", (string)null);
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("DeviceType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Undefined"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Server"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Printer"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Router"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Switch"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 8,
                            Name = "MobilePhone"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.ComputerData", b =>
                {
                    b.HasOne("Atlas_Monitoring.Core.Models.Database.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.ComputerHardDrive", b =>
                {
                    b.HasOne("Atlas_Monitoring.Core.Models.Database.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.Device", b =>
                {
                    b.HasOne("Atlas_Monitoring.Core.Models.Database.DeviceType", "DeviceType")
                        .WithMany()
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.DeviceHistory", b =>
                {
                    b.HasOne("Atlas_Monitoring.Core.Models.Database.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Atlas_Monitoring.Core.Models.Database.DeviceParts", b =>
                {
                    b.HasOne("Atlas_Monitoring.Core.Models.Database.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");
                });
#pragma warning restore 612, 618
        }
    }
}
